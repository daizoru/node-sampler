// Generated by CoffeeScript 1.3.3
(function() {
  var Playback, Record, Stream, contains, delay, error, inspect, log, moment, stores, _, _ref, _ref1,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  _ref = require('util'), log = _ref.log, error = _ref.error, inspect = _ref.inspect;

  Stream = require('stream').Stream;

  _ = require('underscore');

  moment = require('moment');

  _ref1 = require('./misc/toolbox'), delay = _ref1.delay, contains = _ref1.contains;

  stores = require('./stores');

  Playback = require('./playback');

  Record = (function() {

    function Record(url) {
      this.newPlayback = __bind(this.newPlayback, this);

      this.write = __bind(this.write, this);

      this.length = __bind(this.length, this);
      this.store = new stores.InMemory();
      if (contains("file://", url)) {
        this.store = new stores.SimpleFile(url);
      }
    }

    Record.prototype.length = function(cb) {
      if (cb == null) {
        cb = false;
      }
      return this.store.length(cb);
    };

    Record.prototype.write = function(timestamp, data, status) {
      if (status == null) {
        status = function() {};
      }
      return this.store.write(timestamp, data, status);
    };

    Record.prototype.newPlayback = function(ccntroller) {
      return new Playback(this, controller);
    };

    return Record;

  })();

}).call(this);
